# Generated by Django 5.1.4 on 2024-12-26 16:23

import django.db.models.deletion
import django_countries.fields
import phonenumber_field.modelfields
import stores.utils
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Domain',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('host', models.CharField(blank=True, max_length=255, null=True, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='StaffMember',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('locale', models.CharField(blank=True, max_length=50, null=True)),
                ('account_access', models.CharField(blank=True, max_length=100, null=True)),
                ('is_store_owner', models.BooleanField(default=False)),
                ('name', models.CharField(blank=True, max_length=255, null=True)),
                ('first_name', models.CharField(blank=True, max_length=255, null=True)),
                ('email', models.EmailField(blank=True, max_length=254, null=True)),
                ('permissions', models.JSONField(blank=True, null=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='staff_members', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name_plural': 'Staff Members',
            },
        ),
        migrations.CreateModel(
            name='Store',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(default='My Store', max_length=255)),
                ('email', models.EmailField(max_length=254, null=True)),
                ('default_domain', models.CharField(default=stores.utils.generate_unique_subdomain, max_length=255, unique=True)),
                ('currency_code', models.CharField(default='USD', max_length=5)),
                ('enabled_presentment_currencies', models.JSONField(blank=True, null=True)),
                ('owner', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='owned_store', to='stores.staffmember')),
                ('primary_domain', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='stores.domain')),
            ],
        ),
        migrations.AddField(
            model_name='staffmember',
            name='store',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='staff_members', to='stores.store'),
        ),
        migrations.CreateModel(
            name='StoreAddress',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('address1', models.CharField(blank=True, max_length=255, null=True)),
                ('address2', models.CharField(blank=True, max_length=255, null=True)),
                ('city', models.CharField(blank=True, max_length=100, null=True)),
                ('country', django_countries.fields.CountryField(blank=True, max_length=2, null=True)),
                ('company', models.CharField(blank=True, max_length=255, null=True)),
                ('phone', phonenumber_field.modelfields.PhoneNumberField(blank=True, max_length=128, null=True, region=None)),
                ('province_code', models.CharField(blank=True, max_length=10, null=True)),
                ('zip', models.CharField(blank=True, max_length=10, null=True)),
                ('store', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='billing_address', to='stores.store')),
            ],
        ),
        migrations.AlterUniqueTogether(
            name='staffmember',
            unique_together={('user', 'store')},
        ),
    ]
